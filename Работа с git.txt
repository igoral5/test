Начальная настройка git
git config --global user.name "John Doe"			Установить глобально (для всех проектов данного пользователя) его имя
git config --global user.email johndoe@example.com		Установить глобально электронный адрес
git config --global core.editor kwrite				Установить глобально редактор текста
git config --global merge.tool meld				Установить глобально программу для разрешения конфликтов
git config --list						Посмотреть используемые настройки
git config user.name						Посмотреть значение настройки, в данном случае имени пользователя

Настройки храняться в /etc/gitconfig (системные настройки для всех пользователей данной машины, ключ --system ) ~/.gitconfig (глобальные настройки
данного пользователя, ключ --global) .git/config (локальные настройки для данного репозитария). Настройки действуют подобно файлам css в порядке:
системные, глобальные, локальные

Общие команды git
git init 							создание в текущем каталоге репозитория git
git add readme.txt						Добавить в индекс файл readme.txt
git add .							Добавить в индекс все изменные файлы текущего и вложенных каталогов (кроме файлов указанных в .gitignore)
git rm readme.txt						Удалить readme.txt из отслеживаемых файлов и из рабочего каталога
git rm -f readme.txt						Позваляет удалить измененый и проиндексированный файл readme.txt
git rm --cached readme.txt					Удалить файл readme.txt из индекса, но оставить его в рабочем каталоге
git mv file_from file_to					Переместить или переименовать файл
git commit							Зафиксировать индекс (для формирования комментария будет вызван редактор указанны в core.editor)
git commit -a -m 'first commit'					Зафиксировать все изменения (-a) с указанным комметарием (-m)
git status							Показать текущий статус репозитария
git diff							Показать разность между проиндексированными и измененными файлами
git diff --stage						Показать разность между последним коммитом и индексированными файлами
git log								Просмотр истории коммитов
git log -p -2							Вывести информацию о двух последних коммитах (-2), вместо списка измененных файлов вывести разницу
git log --status						Вывести историю коммитов и сведения о количестве вставок, удаления и замен
git log --pretty=oneline					Вывести историю коммитов в особом формате, в данном случае в одну строку
git log --graph							Вывести историю коммитов и графическое отображение дерева веток (ascii графика)
git log --since=2.weeks						Выводит историю коммитов, сделанных за последнии 2 недели

Кроме того существует gitk, который в графическом виде показывает историю коммитов

Отмена изменений
git commit --amend						Сделать новую фиксацию, которая заменит предыдущий коммит
git reset HEAD readme.txt					Отменить индексацию файла
git checkout -- readme.txt					Отменить изменение файла

Команды работы с удаленными репозитариями
git remote							Показать список удаленных репозитариев
git remote -v							Показать список удаленных репозитариев и их url'ы
git remote show origin						Показать дополнительную информацию о удаленном репозитарии: url, текущий HEAD, настройки для git pull и git push
git remote add origin git@github.com:username/reponame.git	Добавить удаленный репозитарий под именем origin
git remote rename <old> <new>					Сменить имя (алиас) удаленного репозитария
git remote remove <name>					Удалить удаленный репозитарий
git fetch origin						Получить все ветки из удаленного репозитария, но ничего не сливая
git branch --set-upstream-to=origin/master master		Настроить удаленный репозиторий и ветку из которой будут браться изменения (origin/master) 
								и локальную ветку куда эти изменения будут вливаться (master) для git pull
git pull							Взять изменения из удаленного репозитария и влить себе
git push							Отправить свои изменения в удаленный репозитарий
git push origin master						Отправить свои изменения из ветки master в удаленный репозитарий origin

Работа а метками
git tag								Показать список меток
git tag -l 'v.1.*'						Показать список меток совпадающих с шаблоном
git tag -a v.1.4 -m 'my version 1.4'				Создать аннотированную метку с описанием
git tag -s v1.5 -m 'my signed 1.5 tag'				Создать подписанную ключем аннотированную метку с описанием
git tag -a v1.2 -m 'version 1.2' 9fceb02			Поставить метку на определенный коммит
git tag v1.4-lw							Создать легковесную метку
git show v1.4							Посмотреть информацию о метке
git tag -v v1.4.2.1						Верификация метки
git push origin v1.5						Отправить метку в удаленный репозитарий (по умолчанию метки не отправляются)
git push origin --tags						Отправить все неотправленные метки в удаленный репозитарий




Команды работы с ветками
git branch							Показать список веток
git branch -r							Показать список веток полученных из удаленных репозитариев
git branch ticket42						Создать новую ветку ticket42
git checkout ticket42						Переключится на ветку ticket42
git merge ticket42						Слить текущую ветку и ветку ticket42
git mergetool							Запустить программу, указанную в merge.tool для разрешения конфликта
git branch -d ticket42						Удалить ветку ticket42, при этом все коммиты в этой ветке должны быть влиты
git branch -D ticket42						Удалить ветку ticket42, в которой могут быть не влитые коммиты


